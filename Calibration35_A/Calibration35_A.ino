// =========================================================================================
// 3.5ｲﾝﾁ･ﾀｯﾁｽｸﾘｰﾝの調整と調整ﾃﾞｰﾀをEEPROMに保存する。
// =========================================================================================
// -----------------------------------------------------------------------------------------
// 組み込むﾗｲﾌﾞﾗﾘ
// -----------------------------------------------------------------------------------------
// [ｽｹｯﾁ]-[ﾗｲﾌﾞﾗﾘをｲﾝｸﾙｰﾄﾞ]
#include <EEPROM.h>              // [標準ﾗｲﾌﾞﾗﾘ]EEPROMの読書き
// -----------------------------------------------------------------------------------------
// [ﾂｰﾙ]-[ﾗｲﾌﾞﾗﾘを管理] から組込む。(ｺﾝﾊﾟｲﾙとArduino MEGA2560書込みの為)
// Adafruit_BusIO, Adafruit_GFX_Library も組込む。
#include <MCUFRIEND_kbv.h>       // Mcufriend style display shield(Ver,2.9.9)
MCUFRIEND_kbv DSP;               // hard-wired for UNO shields anyway.
// -----------------------------------------------------------------------------------------
// [ﾂｰﾙ]-[ﾗｲﾌﾞﾗﾘを管理] から組込む。(ｺﾝﾊﾟｲﾙとArduino MEGA2560書込みの為)
#include <TouchScreen.h>         // Adafruit_TouchScreen(Ver,1.1.1)
// -----------------------------------------------------------------------------------------
// https://github.com/Tamakichi/Arduino-misakiUTF16
// ﾀﾞｳﾝﾛｰﾄﾞし、解凍したら [ドキュメント]\Ardoino\libraries に入れる。(ｺﾝﾊﾟｲﾙとArduino MEGA2560書込みの為)
#include <misakiUTF16.h>         // 美咲ﾌｫﾝﾄﾄﾞﾗｲﾊﾞ by たま吉さん
// -----------------------------------------------------------------------------------------


////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////
// ﾀｯﾁｽｸﾘｰﾝ /////////////////////////////////////////////////////////////////////////////////
//TouchScreen TS = TouchScreen(XP, YP, XM, YM, 300);
// =========================================================================================
// (A)
// 基板に書いてある[3.5" TFT LCD Shield]の書式がゴシック体なら、こっち？
// [KUMAN SCSA-1][LCDwiki MAR3501]等はこっちを使う
// ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
  TouchScreen TS = TouchScreen(8, A3, A2, 9, 300);
  #define YPXM_PORT B00001100           // A2, A3
// =========================================================================================
// (B)
// 基板に書いてある[3.5" TFT LCD Shield]の書式がゴシック体じゃないなら、こっち？
// 箱のﾗﾍﾞﾙに(Touch:Yes)と(SKU:MAR3502)が書いてあるものはこっちを使う
// ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
//TouchScreen TS = TouchScreen(6, A1, A2, 7, 300);
//#define YPXM_PORT B00000110           // A1, A2
// =========================================================================================
////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////


// -----------------------------------------------------------------------------------------
// 定数定義
// -----------------------------------------------------------------------------------------
#define LF 0x0A     // Ascii(改行)(Line Feed)
#define CR 0x0D     // Ascii(復帰)(Carriage Return)

// 画面
#define DTS_LEFT  920                        // X座標=0のﾀｯﾁｽｸﾘｰﾝの値
#define DTS_RIGHT 160                        // X座標=320のﾀｯﾁｽｸﾘｰﾝの値
#define DTS_UP    960                        // Y座標=0のﾀｯﾁｽｸﾘｰﾝの値
#define DTS_DOWN  160                        // Y座標=480のﾀｯﾁｽｸﾘｰﾝの値
#define MINPRESSURE 10
#define MAXPRESSURE 1000

// B1111100000000000 -> 赤
// B0000011111100000 -> 緑
// B0000000000011111 -> 青
#define BLACK           0x0000
#define BLUE            0x001F
#define RED             0xF800
#define DARK_RED        0xA000
#define GREEN           0x07E0
#define DARK_GREEN      0x47E8
#define YELLOW_GREEN    0x83E0
#define CYAN            0x07FF
#define MAGENTA         0xF81F
#define YELLOW          0xFFE0
#define WHITE           0xFFFF
#define GRAY            0xC618
#define DARK_GRAY       0x4108
#define SKY_BLUE        0x03FF
#define PURPLE          0xF810
#define ORENGE          0xFA00
#define PINK            0xFA1F
#define BROWN           0x7940
#define DARK_BROWN      0x58E0
#define IVORY           0xFB94
#define OLIVE           0xE780
#define JP_SKIN         0xFF90
#define JP_SKIN_SHADOW  0xE70E


// -----------------------------------------------------------------------------------------
// ｸﾞﾛｰﾊﾞﾙ変数定義
// -----------------------------------------------------------------------------------------
// 文字列関連 ------------------------------------------------------------
unsigned int Str_length;                // 文字数
char Edit_Str[64];                      // 文字列編集用
char Short_Str[32];                     // 短い文字列編集用
char Copy_Str[13];                      // ｺﾋﾟｰされた文字列の一部
long Str_DEC;                           // 文字列から変換された数値(10進数0-999999999)
char DEC_Str[10];                       // 数値から変換された文字列(10進数0-999999999)
int Comp_sts;                           // sort比較結果(Comparison status)

// UI ------------------------------------------------------------
byte Yes_No = 0;                        // UI

// 画面設定 ------------------------------------------------------------
int P_X[4];                             // ﾀｯﾁｽｸﾘｰﾝX軸の値(画面4すみ)
int P_Y[4];                             // ﾀｯﾁｽｸﾘｰﾝY軸の値(画面4すみ)

// 画面 ------------------------------------------------------------
int Th_X;                               // 回転後のﾀｯﾁ座標(X, Y)
int Th_Y;                               // 回転後のﾀｯﾁ座標(X, Y)
int TS_LEFT;                            // X座標=0のﾀｯﾁｽｸﾘｰﾝの値(回転してない時の)
int TS_RIGHT;                           // X座標=320のﾀｯﾁｽｸﾘｰﾝの値(回転してない時の)
int TS_UP;                              // Y座標=0のﾀｯﾁｽｸﾘｰﾝの値(回転してない時の)
int TS_DOWN;                            // Y座標=480のﾀｯﾁｽｸﾘｰﾝの値(回転してない時の)
byte Scr_Angle = 2;                     // 1=90度右に回転,2=180度,3=270度,0=0度
boolean Touch_flg = false;              // 画面に触った

// 初期処理 ------------------------------------------------------------------------------------------
void setup() {
//Serial.begin(9600);                                         // 9600bpsでﾎﾟｰﾄを開く
  Serial.begin(115200);                                       // 115200bpsでﾎﾟｰﾄを開く
  delay(1000);
//Serial.println(F("Serial.begin(115200);"));                 // F():Flashﾒﾓﾘｰに文字列DATAが入る

// -----------------------------------------------------------------------------------------
  Touch_Screen_Setting();                                     // ﾀｯﾁｸﾘｰﾝのｷｬﾘﾌﾞﾚｰｼｮﾝ設定
// -----------------------------------------------------------------------------------------
}


// 主処理 --------------------------------------------------------------------------------------------
void loop() {
}


//
